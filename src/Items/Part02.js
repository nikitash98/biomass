/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/Part02.glb
*/


import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { playAnimations, setAnimationTime } from '../3D_Components/AnimationUtilities'
import { useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import slides from "../slides.json"
import { lerp } from 'three/src/math/MathUtils'


export function Part02(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Part02.glb')
  const { actions } = useAnimations(animations, group)
  const animationTime = useRef(0)

let animationSpeed = 1.0
    
  useEffect( () =>{
    playAnimations(actions)
    for (const prop in nodes) {
        nodes[prop].frustumCulled = false;
    }
  }, [])


  if([23,24,25].includes(props.counter)) {
    animationSpeed = 1.0
    console.log("HERE")
  }

  useFrame((state, delta)=> {
    animationTime.current = lerp(animationTime.current, slides[props.counter]["animationTime"], animationSpeed * delta)
    setAnimationTime(actions, animationTime.current)
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Humans" geometry={nodes.Humans.geometry} material={materials['Material.003']} position={[0.19, -15.07, 9.42]} rotation={[Math.PI / 2, 0, 0.43]}>


          <mesh name="Artboard_4_copy_10@3x" geometry={nodes['Artboard_4_copy_10@3x'].geometry} material={materials.Icons} position={[-0.02, 0.21, -0.01]} scale={0.71} />
        </mesh>
        <mesh name="Concrete" geometry={nodes.Concrete.geometry} material={materials.Concrete} position={[72.63, -2.19, -16.76]} rotation={[0, Math.PI / 6, 0]} scale={6.5}>
          <mesh name="Plane011" geometry={nodes.Plane011.geometry} material={materials['Material.008']} position={[0, -0.01, 0.52]} rotation={[Math.PI / 2, 0, 0]} scale={0.66} />
        </mesh>
        <mesh name="Bricks" geometry={nodes.Bricks.geometry} material={materials.Bricks} position={[58.45, -0.83, -6.55]} rotation={[0, Math.PI / 6, 0]} scale={3.58}>
          <mesh name="Plane008" geometry={nodes.Plane008.geometry} material={materials['Material.008']} position={[-0.01, -0.01, 0.54]} rotation={[Math.PI / 2, 0, 0]} scale={1.2} />
        </mesh>
        <mesh name="Metals" geometry={nodes.Metals.geometry} material={materials.Metal} position={[48.34, -0.26, -0.01]} rotation={[0, Math.PI / 6, 0]} scale={[2.69, 2.55, 2.55]}>
          <mesh name="Artboard_4_copy_6@3x001" geometry={nodes['Artboard_4_copy_6@3x001'].geometry} material={materials['Material.008']} position={[0, 0.02, 0.52]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[0.68, 0.8, 0.71]} />
        </mesh>
        <mesh name="Aggregates" geometry={nodes.Aggregates.geometry} material={materials.Aggregates} position={[64.25, -1.84, -11.55]} rotation={[0, Math.PI / 6, 0]} scale={5.78}>
          <mesh name="Plane009" geometry={nodes.Plane009.geometry} material={materials['Material.008']} position={[0.02, 0.03, 0.55]} rotation={[Math.PI / 2, 0, 0]} scale={1.19} />
        </mesh>
        <mesh name="Asphalt" geometry={nodes.Asphalt.geometry} material={materials.Asphalt} position={[53.28, -0.58, -3.36]} rotation={[0, Math.PI / 6, 0]} scale={3.19}>
          <mesh name="Plane010" geometry={nodes.Plane010.geometry} material={materials['Material.008']} position={[0, 0.02, 0.58]} rotation={[Math.PI / 2, 0, 0]} scale={1.22} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/Part02.glb')
